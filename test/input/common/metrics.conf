##################################################################
# Metrics
##################################################################
beam.metrics.level = "off"

beam.sim.metric.collector {
  influxDbSimulationMetricCollector {
    database = "beam"
    connectionString = "http://localhost:8086"
  }
  metrics = ""
  # metrics = "beam-run-households,beam-run-charging-depots-stalls-cnt,beam-run-charging-depots-cnt,beam-run-private-fleet-size,beam-run,beam-run-public-fast-charge-cnt,beam-run-population-size,beam-run-public-fast-charge-stalls-cnt,beam-run-RH-ev-non-cav,ride-hail-inquiry-served,beam-iteration,rh-ev-cav-count,rh-ev-cav-distance,rh-noev-nocav-distance,beam-run-RH-non-ev-non-cav,average-travel-time,rh-ev-nocav-distance,rh-noev-cav-distance,beam-run-RH-ev-cav,chargingPower,ride-hail-allocation-reserved,ride-hail-waiting-time-map,rh-noev-nocav-count,ride-hail-trip-distance,rh-ev-nocav-count,mode-choices,rh-noev-cav-count,beam-run-RH-non-ev-cav,parking,ride-hail-waiting-time"
}